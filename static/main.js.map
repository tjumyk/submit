{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/account.service.ts","webpack:///./src/app/admin-course-edit/admin-course-edit.component.html","webpack:///./src/app/admin-course-edit/admin-course-edit.component.less","webpack:///./src/app/admin-course-edit/admin-course-edit.component.ts","webpack:///./src/app/admin-course-new/admin-course-new.component.html","webpack:///./src/app/admin-course-new/admin-course-new.component.less","webpack:///./src/app/admin-course-new/admin-course-new.component.ts","webpack:///./src/app/admin-courses/admin-courses.component.html","webpack:///./src/app/admin-courses/admin-courses.component.less","webpack:///./src/app/admin-courses/admin-courses.component.ts","webpack:///./src/app/admin-term-edit/admin-term-edit.component.html","webpack:///./src/app/admin-term-edit/admin-term-edit.component.less","webpack:///./src/app/admin-term-edit/admin-term-edit.component.ts","webpack:///./src/app/admin-term-new/admin-term-new.component.html","webpack:///./src/app/admin-term-new/admin-term-new.component.less","webpack:///./src/app/admin-term-new/admin-term-new.component.ts","webpack:///./src/app/admin-terms/admin-terms.component.html","webpack:///./src/app/admin-terms/admin-terms.component.less","webpack:///./src/app/admin-terms/admin-terms.component.ts","webpack:///./src/app/admin.guard.ts","webpack:///./src/app/admin.service.ts","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.less","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.less","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/error-message/error-message.component.html","webpack:///./src/app/error-message/error-message.component.less","webpack:///./src/app/error-message/error-message.component.ts","webpack:///./src/app/forbidden/forbidden.component.html","webpack:///./src/app/forbidden/forbidden.component.less","webpack:///./src/app/forbidden/forbidden.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.less","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/log.service.ts","webpack:///./src/app/models.ts","webpack:///./src/app/not-found/not-found.component.html","webpack:///./src/app/not-found/not-found.component.less","webpack:///./src/app/not-found/not-found.component.ts","webpack:///./src/app/success-message/success-message.component.html","webpack:///./src/app/success-message/success-message.component.less","webpack:///./src/app/success-message/success-message.component.ts","webpack:///./src/app/upload-util.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {tap} from \"rxjs/operators\";\nimport {Logger, LogService} from \"./log.service\";\nimport {Observable} from \"rxjs/internal/Observable\";\nimport {User} from \"./models\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n  private api: string = 'api/account';\n  private logger: Logger;\n\n  constructor(\n    private http: HttpClient,\n    logService: LogService\n  ) {\n    this.logger = logService.get_logger('AccountService')\n  }\n\n  get_current_user(): Observable<User> {\n    return this.http.get<User>('/api/account/me').pipe(\n      tap(user => this.logger.info(`Fetched user info of ${user.name}`))\n    )\n  }\n}\n","module.exports = \"<app-error-message [error]=\\\"error\\\"></app-error-message>\\n<app-success-message [success]=\\\"success\\\"></app-success-message>\\n\\n<div class=\\\"ui center aligned active text loader\\\" *ngIf=\\\"loadingCourse\\\">Loading course info...</div>\\n\\n<div class=\\\"ui grid stackable two column\\\" *ngIf=\\\"course\\\">\\n  <!-- Left Panel -->\\n  <div class=\\\"column\\\">\\n    <div class=\\\"ui segments\\\">\\n      <!--Header-->\\n      <div class=\\\"ui segment\\\">\\n        <div class=\\\"ui header\\\">\\n          <i class=\\\"icon book\\\"></i>\\n          {{course.code}}\\n        </div>\\n      </div>\\n      <!--End of Header-->\\n\\n      <!-- Basic Info -->\\n      <div class=\\\"ui segment\\\">\\n        <div class=\\\"ui list horizontal\\\">\\n          <div class=\\\"item\\\">\\n            <div class=\\\"header\\\">ID</div>\\n            {{course.id}}\\n          </div>\\n          <div class=\\\"item\\\">\\n            <div class=\\\"header\\\">Code</div>\\n            {{course.code}}\\n          </div>\\n          <div class=\\\"item\\\">\\n            <div class=\\\"header\\\">Name</div>\\n            {{course.name}}\\n          </div>\\n        </div>\\n      </div>\\n      <!-- End of Basic Info -->\\n\\n      <!--Icon Upload-->\\n      <div class=\\\"ui segment\\\">\\n        <div class=\\\"ui center aligned grid\\\">\\n          <div class=\\\"column\\\">\\n            <form class=\\\"ui form\\\" [ngClass]=\\\"{'loading': uploadingIcon}\\\">\\n              <div class=\\\"field\\\">\\n                <label>Icon</label>\\n                <input type=\\\"file\\\" hidden name=\\\"icon\\\" #icon_input [accept]=\\\"iconValidator.filter.accept.join(',')\\\" (change)=\\\"uploadIcon(icon_input)\\\">\\n                <img class=\\\"ui small centered image\\\" [src]=\\\"course.icon\\\" *ngIf=\\\"course.icon\\\">\\n                <div class=\\\"text muted\\\" *ngIf=\\\"!course.icon\\\">(No icon)</div>\\n              </div>\\n              <button class=\\\"ui primary button\\\" type=\\\"button\\\" (click)=\\\"icon_input.click()\\\">Upload Icon</button>\\n              <p>Max size: {{iconValidator.filter.size_limit/1024 | number}}KB, squared image only</p>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n      <!--End of Icon Upload-->\\n\\n      <!--Lectures-->\\n      <div class=\\\"segment\\\">\\n\\n      </div>\\n      <!--End of Lectures-->\\n    </div>\\n  </div>\\n  <!-- End of Left Panel -->\\n\\n  <!--Right Panel-->\\n  <div class=\\\"column\\\">\\n\\n  </div>\\n  <!--End of Right Panel-->\\n</div>\\n\"","module.exports = \"\"","import {Component, OnInit} from '@angular/core';\nimport {Course, ErrorMessage, SuccessMessage} from \"../models\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {AdminService} from \"../admin.service\";\nimport {finalize} from \"rxjs/operators\";\nimport {UploadFilters, UploadValidator} from \"../upload-util\";\n\n@Component({\n  selector: 'app-admin-course-edit',\n  templateUrl: './admin-course-edit.component.html',\n  styleUrls: ['./admin-course-edit.component.less']\n})\nexport class AdminCourseEditComponent implements OnInit {\n  error: ErrorMessage;\n  success: SuccessMessage;\n\n  loadingCourse: boolean;\n  course_id: number;\n  course: Course;\n\n  uploadingIcon: boolean;\n  iconValidator: UploadValidator = new UploadValidator(UploadFilters.icon);\n\n  constructor(\n    private adminService: AdminService,\n    private route: ActivatedRoute\n  ) {\n  }\n\n  ngOnInit() {\n    this.course_id = parseInt(this.route.snapshot.paramMap.get('course_id'));\n    this.loadCourse()\n  }\n\n  loadCourse() {\n    this.loadingCourse = true;\n    this.adminService.getCourse(this.course_id).pipe(\n      finalize(() => this.loadingCourse = false)\n    ).subscribe(\n      course => this.course = course,\n      error => this.error = error.error\n    )\n  }\n\n  uploadIcon(input: HTMLInputElement) {\n    let files = input.files;\n    if (files.length == 0)\n      return;\n\n    let file = files.item(0);\n    if (!this.iconValidator.check(file)) {\n      input.value = '';  // reset\n      this.error = this.iconValidator.error;\n      return;\n    }\n\n    this.uploadingIcon = true;\n    this.adminService.updateCourseIcon(this.course_id, file).pipe(\n      finalize(() => {\n        this.uploadingIcon = false;\n        input.value = '';  // reset\n      })\n    ).subscribe(\n      (course) => {\n        this.course = course;\n        this.success = {msg: 'Uploaded course icon successfully'}\n      },\n      (error) => this.error = error.error\n    )\n  }\n\n}\n","module.exports = \"<app-error-message [error]=\\\"error\\\"></app-error-message>\\n<div class=\\\"ui segment\\\">\\n  <div class=\\\"ui header dividing\\\">\\n    <i class=\\\"icon plus\\\"></i> New Course\\n  </div>\\n  <form class=\\\"ui form\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"newTerm(f)\\\" [ngClass]=\\\"{'loading': addingCourse}\\\">\\n    <div class=\\\"field required\\\" [ngClass]=\\\"{'error': (code_model.touched || code_model.dirty || f.submitted) && code_model.invalid}\\\">\\n      <label>Code</label>\\n      <input type=\\\"text\\\" name=\\\"code\\\" placeholder='e.g. \\\"COMP9318\\\" (at most 16 characters)'\\n             required maxlength=\\\"16\\\"\\n             [(ngModel)]=\\\"form.code\\\" #code_model=\\\"ngModel\\\">\\n      <div class=\\\"errors\\\">\\n        <label *ngIf=\\\"code_model.errors?.required\\\"><i class=\\\"icon times\\\"></i> Code is required</label>\\n        <label *ngIf=\\\"code_model.errors?.maxlength\\\"><i class=\\\"icon times\\\"></i> Code is too long</label>\\n      </div>\\n    </div>\\n    <div class=\\\"field required\\\" [ngClass]=\\\"{'error': (name_model.touched || name_model.dirty || f.submitted) && name_model.invalid}\\\">\\n      <label>Name</label>\\n      <input type=\\\"text\\\" name=\\\"name\\\" placeholder='e.g. \\\"Data Warehousing and Data Mining\\\" (at most 128 characters)'\\n             required maxlength=\\\"128\\\"\\n             [(ngModel)]=\\\"form.name\\\" #name_model=\\\"ngModel\\\">\\n      <div class=\\\"errors\\\">\\n        <label *ngIf=\\\"name_model.errors?.required\\\"><i class=\\\"icon times\\\"></i> Name is required</label>\\n        <label *ngIf=\\\"name_model.errors?.maxlength\\\"><i class=\\\"icon times\\\"></i> Name is too long</label>\\n      </div>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"ui primary button fluid\\\">Add Course</button>\\n  </form>\\n</div>\\n\"","module.exports = \"\"","import {Component, OnInit} from '@angular/core';\nimport {AdminService, NewCourseForm} from \"../admin.service\";\nimport {ErrorMessage} from \"../models\";\nimport {NgForm} from \"@angular/forms\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {finalize} from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-admin-course-new',\n  templateUrl: './admin-course-new.component.html',\n  styleUrls: ['./admin-course-new.component.less']\n})\nexport class AdminCourseNewComponent implements OnInit {\n  error: ErrorMessage;\n  addingCourse: boolean;\n  form: NewCourseForm = new NewCourseForm();\n\n  constructor(\n    private adminService: AdminService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit() {\n  }\n\n  newTerm(f: NgForm) {\n    if (f.invalid)\n      return;\n\n    this.addingCourse = true;\n    this.adminService.addCourse(this.form).pipe(\n      finalize(() => this.addingCourse = false)\n    ).subscribe(\n      (course) => this.router.navigate([`../courses/${course.id}`], {relativeTo: this.route}),\n      (error) => this.error = error.error\n    )\n  }\n\n\n}\n","module.exports = \"<app-error-message [error]=\\\"error\\\"></app-error-message>\\n<div class=\\\"top attached ui segment\\\">\\n  <a routerLink=\\\"../course-new\\\" class=\\\"ui primary button\\\"><i class=\\\"icon plus\\\"></i> New Course</a>\\n</div>\\n<div class=\\\"ui active text loader center aligned\\\" *ngIf=\\\"loadingCourses\\\">Loading course list...</div>\\n<table class=\\\"ui table bottom attached unstackable celled\\\" *ngIf=\\\"courses\\\">\\n  <thead><tr><th>ID</th><th>Code</th><th>Name</th><th class=\\\"collapsing\\\">Ops</th></tr></thead>\\n  <tbody>\\n  <tr *ngFor=\\\"let course of courses, index as i\\\">\\n    <td>{{course.id}}</td>\\n    <td>{{course.code}}</td>\\n    <td>{{course.name}}</td>\\n    <td class=\\\"collapsing\\\">\\n      <div class=\\\"ui buttons small\\\">\\n        <a routerLink=\\\"../courses/{{course.id}}\\\" class=\\\"ui button icon\\\"><i class=\\\"edit icon\\\"></i></a>\\n        <a (click)=\\\"deleteCourse(course, i, btn_delete_course)\\\" #btn_delete_course class=\\\"ui red button icon\\\"><i class=\\\"trash icon\\\"></i></a>\\n      </div>\\n    </td>\\n  </tr>\\n  </tbody>\\n</table>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport {ErrorMessage, Course, Term} from \"../models\";\nimport {AdminService} from \"../admin.service\";\nimport {finalize} from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-admin-courses',\n  templateUrl: './admin-courses.component.html',\n  styleUrls: ['./admin-courses.component.less']\n})\nexport class AdminCoursesComponent implements OnInit {\n\n  error: ErrorMessage;\n  loadingCourses: boolean;\n  courses: Course[];\n\n  constructor(\n    private adminService: AdminService\n  ) { }\n\n  ngOnInit() {\n    this.loadTerms();\n  }\n\n  private loadTerms(){\n    this.loadingCourses = true;\n    this.adminService.getCourses().pipe(\n      finalize(()=>this.loadingCourses=false)\n    ).subscribe(\n      (courses) => this.courses = courses,\n      (error)=> this.error = error.error\n    )\n  }\n\n  deleteCourse(course, index, btn:HTMLElement){\n    if(!confirm(`Really want to delete course \"${course.code} - ${course.name}\"? This is not recoverable!`))\n      return;\n\n    btn.classList.add('loading', 'disabled');\n    this.adminService.deleteCourse(course.id).pipe(\n      finalize(()=>btn.classList.remove('loading', 'disabled'))\n    ).subscribe(\n      ()=>this.courses.splice(index, 1),\n      (error)=>this.error=error.error\n    )\n  }\n\n\n}\n","module.exports = \"<div class=\\\"ui segments\\\">\\n  <div class=\\\"ui segment\\\">\\n    <form class=\\\"ui form\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"updateTerm(f)\\\" [ngClass]=\\\"{'loading': updatingTerm}\\\">\\n      <div class=\\\"field required\\\" [ngClass]=\\\"{'error': (title_model.touched || title_model.dirty || f.submitted) && title_model.invalid}\\\">\\n        <label>Title</label>\\n        <input type=\\\"text\\\" name=\\\"title\\\" placeholder='e.g. \\\"COMP9318 18s1\\\" (at most 128 characters)'\\n               required maxlength=\\\"128\\\"\\n               [(ngModel)]=\\\"form.title\\\" #title_model=\\\"ngModel\\\">\\n        <div class=\\\"errors\\\">\\n          <label *ngIf=\\\"title_model.errors?.required\\\">Title is required</label>\\n          <label *ngIf=\\\"title_model.errors?.maxlength\\\">Title is too long</label>\\n        </div>\\n      </div>\\n      <div class=\\\"field\\\" [ngClass]=\\\"{'error': (desc_model.touched || desc_model.dirty || f.submitted) && desc_model.invalid}\\\">\\n        <label>Description</label>\\n        <input type=\\\"text\\\" name=\\\"description\\\" placeholder='A general introduction of this course or term (at most 256 characters)'\\n               maxlength=\\\"256\\\"\\n               [(ngModel)]=\\\"form.description\\\" #desc_model=\\\"ngModel\\\">\\n        <div class=\\\"errors\\\">\\n          <label *ngIf=\\\"desc_model.errors?.maxlength\\\">Description is too long</label>\\n        </div>\\n      </div>\\n      <button type=\\\"submit\\\" class=\\\"ui primary button fluid\\\">Add</button>\\n    </form>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport {ErrorMessage, Term} from \"../models\";\nimport {NgForm} from \"@angular/forms\";\nimport {AdminService} from \"../admin.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {finalize} from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-admin-term-edit',\n  templateUrl: './admin-term-edit.component.html',\n  styleUrls: ['./admin-term-edit.component.less']\n})\nexport class AdminTermEditComponent implements OnInit {\n  error: ErrorMessage;\n  loadingTerm: boolean;\n  termId: number;\n  term: Term;\n  updatingTerm: boolean;\n\n  constructor(\n    private adminService:AdminService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.termId = parseInt(this.route.snapshot.paramMap.get('team_id'));\n\n    this.loadTerm();\n  }\n\n  private loadTerm(){\n    this.loadingTerm=true;\n    this.adminService.getTerm(this.termId).pipe(\n      finalize(()=>this.loadingTerm=false)\n    ).subscribe(\n      term=>this.term=term,\n      error=>this.error=error.error\n    )\n  }\n\n  updateTerm(f:NgForm){\n    if(f.invalid)\n      return;\n\n    this.adminService.updateTerm()\n  }\n\n}\n","module.exports = \"<app-error-message [error]=\\\"error\\\"></app-error-message>\\n<div class=\\\"ui segment\\\">\\n  <div class=\\\"ui header dividing\\\">\\n    <i class=\\\"icon plus\\\"></i> New Term\\n  </div>\\n  <form class=\\\"ui form\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"newTerm(f)\\\" [ngClass]=\\\"{'loading': addingTerm}\\\">\\n    <div class=\\\"field required\\\" [ngClass]=\\\"{'error': (title_model.touched || title_model.dirty || f.submitted) && title_model.invalid}\\\">\\n      <label>Title</label>\\n      <input type=\\\"text\\\" name=\\\"title\\\" placeholder='e.g. \\\"COMP9318 18s1\\\" (at most 128 characters)'\\n             required maxlength=\\\"128\\\"\\n             [(ngModel)]=\\\"form.title\\\" #title_model=\\\"ngModel\\\">\\n      <div class=\\\"errors\\\">\\n        <label *ngIf=\\\"title_model.errors?.required\\\">Title is required</label>\\n        <label *ngIf=\\\"title_model.errors?.maxlength\\\">Title is too long</label>\\n      </div>\\n    </div>\\n    <div class=\\\"field\\\" [ngClass]=\\\"{'error': (desc_model.touched || desc_model.dirty || f.submitted) && desc_model.invalid}\\\">\\n      <label>Description</label>\\n      <input type=\\\"text\\\" name=\\\"description\\\" placeholder='A general introduction of this course or term (at most 256 characters)'\\n             maxlength=\\\"256\\\"\\n             [(ngModel)]=\\\"form.description\\\" #desc_model=\\\"ngModel\\\">\\n      <div class=\\\"errors\\\">\\n        <label *ngIf=\\\"desc_model.errors?.maxlength\\\">Description is too long</label>\\n      </div>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"ui primary button fluid\\\">Add</button>\\n  </form>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport {ErrorMessage} from \"../models\";\nimport {NgForm} from \"@angular/forms\";\nimport {AdminService, NewTermForm} from \"../admin.service\";\nimport {finalize} from \"rxjs/operators\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-admin-term-new',\n  templateUrl: './admin-term-new.component.html',\n  styleUrls: ['./admin-term-new.component.less']\n})\nexport class AdminTermNewComponent implements OnInit {\n  error: ErrorMessage;\n  addingTerm: boolean;\n  form:NewTermForm = new NewTermForm();\n\n  constructor(\n    private adminService: AdminService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  newTerm(f:NgForm){\n    if(f.invalid)\n      return;\n\n    this.addingTerm = true;\n    this.adminService.addTerm(this.form).pipe(\n      finalize(()=>this.addingTerm=false)\n    ).subscribe(\n      (term)=>this.router.navigate([`../terms/${term.id}`], {relativeTo: this.route}),\n      (error)=>this.error = error.error\n    )\n  }\n\n}\n","module.exports = \"<app-error-message [error]=\\\"error\\\"></app-error-message>\\n<div class=\\\"top attached ui segment\\\">\\n  <a routerLink=\\\"../term-new\\\" class=\\\"ui primary button\\\"><i class=\\\"icon plus\\\"></i> New Term</a>\\n</div>\\n<div class=\\\"ui active text loader center aligned\\\" *ngIf=\\\"loadingTerms\\\">Loading term list...</div>\\n<table class=\\\"ui table bottom attached unstackable celled\\\" *ngIf=\\\"terms\\\">\\n  <thead><tr><th>ID</th><th>Title</th><th>Description</th><th class=\\\"collapsing\\\">Ops</th></tr></thead>\\n  <tbody>\\n  <tr *ngFor=\\\"let term of terms, index as i\\\">\\n    <td>{{term.id}}</td>\\n    <td>{{term.title}}</td>\\n    <td>{{term.description}}</td>\\n    <td class=\\\"collapsing\\\">\\n      <div class=\\\"ui buttons small\\\">\\n        <a routerLink=\\\"../terms/{{term.id}}\\\" class=\\\"ui button icon\\\"><i class=\\\"edit icon\\\"></i></a>\\n        <a (click)=\\\"deleteTerm(term, i, btn_delete_term)\\\" #btn_delete_term class=\\\"ui red button icon\\\"><i class=\\\"trash icon\\\"></i></a>\\n      </div>\\n    </td>\\n  </tr>\\n  </tbody>\\n</table>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport {ErrorMessage, Term} from \"../models\";\nimport {AdminService} from \"../admin.service\";\nimport {finalize} from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-admin-terms',\n  templateUrl: './admin-terms.component.html',\n  styleUrls: ['./admin-terms.component.less']\n})\nexport class AdminTermsComponent implements OnInit {\n  error: ErrorMessage;\n  loadingTerms: boolean;\n  terms: Term[];\n\n  constructor(\n    private adminService: AdminService\n  ) { }\n\n  ngOnInit() {\n    this.loadTerms();\n  }\n\n  private loadTerms(){\n    this.loadingTerms = true;\n    this.adminService.getTerms().pipe(\n      finalize(()=>this.loadingTerms=false)\n    ).subscribe(\n      (terms) => this.terms = terms,\n      (error)=> this.error = error.error\n    )\n  }\n\n  deleteTerm(term, index, btn:HTMLElement){\n    if(!confirm(`Really want to delete term ${term.title}? This is not recoverable!`))\n      return;\n\n    btn.classList.add('loading', 'disabled');\n    this.adminService.deleteTerm(term.id).pipe(\n      finalize(()=>btn.classList.remove('loading', 'disabled'))\n    ).subscribe(\n      ()=>this.terms.splice(index, 1),\n      (error)=>this.error=error.error\n    )\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {AccountService} from \"./account.service\";\nimport {catchError, map} from \"rxjs/operators\";\nimport {of} from \"rxjs/internal/observable/of\";\nimport {Logger, LogService} from \"./log.service\";\nimport {User} from \"./models\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  private logger: Logger;\n\n  constructor(\n    private accountService: AccountService,\n    private router: Router,\n    private logService: LogService\n  ) {\n    this.logger = logService.get_logger('AdminGuard')\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    return this.accountService.get_current_user().pipe(\n      map((user: User) => {\n        if (user != null) {\n          for (let group of user.groups) {\n            if (group.name == 'admin') {\n              this.logger.info('Admin verified');\n              return true;\n            }\n          }\n        }\n        this.router.navigate(['/forbidden']);\n        this.logger.warn('Not admin');\n        return false;\n      }),\n      catchError((error) => {\n        const redirect_url = error.error.redirect_url;\n        if (redirect_url) {\n          this.logger.warn('OAuth session closed. Redirect required');\n          window.location.href = redirect_url;\n        } else {\n          this.logger.error(`Failed to get user info: ${error.error.msg}`);\n          this.router.navigate(['/forbidden']);\n        }\n        return of(false);\n      })\n    )\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs/internal/Observable\";\nimport {Course} from \"./models\";\nimport {Logger, LogService} from \"./log.service\";\nimport {tap} from \"rxjs/operators\";\n\nexport class NewCourseForm{\n  code: string;\n  name: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n  private api: string = 'api/admin';\n  private logger: Logger;\n\n  constructor(\n    private http: HttpClient,\n    private logService: LogService\n  ) {\n    this.logger = this.logService.get_logger('AdminService')\n  }\n\n  getCourses(): Observable<Course[]> {\n    return this.http.get<Course[]>(`${this.api}/courses`).pipe(\n      tap((courses) => this.logger.info(`Fetched course list (${courses.length} courses)`))\n    )\n  }\n\n  addCourse(form: NewCourseForm): Observable<Course> {\n    return this.http.post<Course>(`${this.api}/courses`, form).pipe(\n      tap((term: Course) => this.logger.info(`Added new course \"${term.code}\"`))\n    )\n  }\n\n  deleteCourse(tid: number):Observable<any> {\n    return this.http.delete(`${this.api}/courses/${tid}`).pipe(\n      tap(()=>this.logger.info(`Deleted course (id: ${tid})`))\n    )\n  }\n\n  getCourse(tid: number):Observable<Course> {\n    return this.http.get<Course>(`${this.api}/courses/${tid}`).pipe(\n      tap((term)=>this.logger.info(`Fetched info of course \"${term.code}\"`))\n    )\n  }\n\n  updateCourseIcon(tid: number, iconFile: File){\n    const form = new FormData();\n    form.append('icon', iconFile);\n    return this.http.put<Course>(`${this.api}/courses/${tid}`, form).pipe(\n      tap(term=>this.logger.info(`Updated icon of course ${term.code}`))\n    )\n  }\n\n}\n","module.exports = \"<div class=\\\"ui container\\\">\\n  <h1 class=\\\"ui header\\\">\\n    UNSW Submit\\n  </h1>\\n  <div class=\\\"ui segment\\\">\\n    <button class=\\\"ui button\\\" routerLink=\\\"courses\\\">Courses</button>\\n  </div>\\n  <router-outlet></router-outlet>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.less']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {HomeComponent} from \"./home/home.component\";\nimport {AdminComponent} from \"./admin/admin.component\";\nimport {AdminGuard} from \"./admin.guard\";\nimport {AdminTermsComponent} from \"./admin-terms/admin-terms.component\";\nimport {AdminTermNewComponent} from \"./admin-term-new/admin-term-new.component\";\nimport {AdminTermEditComponent} from \"./admin-term-edit/admin-term-edit.component\";\nimport {ForbiddenComponent} from \"./forbidden/forbidden.component\";\nimport {NotFoundComponent} from \"./not-found/not-found.component\";\nimport {AdminCoursesComponent} from \"./admin-courses/admin-courses.component\";\nimport {AdminCourseNewComponent} from \"./admin-course-new/admin-course-new.component\";\nimport {AdminCourseEditComponent} from \"./admin-course-edit/admin-course-edit.component\";\n\nconst routes: Routes = [\n  {path: '', pathMatch: 'full', component: HomeComponent},\n  {\n    path: 'admin',\n    component: AdminComponent,\n    canActivate: [AdminGuard],\n    children: [\n      {path: '', pathMatch: 'full', redirectTo: 'courses'},\n      {path: 'courses', component: AdminCoursesComponent},\n      {path: 'course-new', component: AdminCourseNewComponent},\n      {path: 'courses/:course_id', component: AdminCourseEditComponent},\n      {path: 'courses/:course_id/terms', component: AdminTermsComponent},\n      {path: 'courses/:course_id/term-new', component: AdminTermNewComponent},\n      {path: 'terms/:team_id', component: AdminTermEditComponent}\n    ]\n  },\n  {path: 'forbidden', component: ForbiddenComponent},\n  {path: '**', component: NotFoundComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { AdminTermsComponent } from './admin-terms/admin-terms.component';\nimport { AdminTermEditComponent } from './admin-term-edit/admin-term-edit.component';\nimport { AdminTermNewComponent } from './admin-term-new/admin-term-new.component';\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {FormsModule} from \"@angular/forms\";\nimport { HomeComponent } from './home/home.component';\nimport {ForbiddenComponent} from \"./forbidden/forbidden.component\";\nimport {NotFoundComponent} from \"./not-found/not-found.component\";\nimport { ErrorMessageComponent } from './error-message/error-message.component';\nimport { AdminCoursesComponent } from './admin-courses/admin-courses.component';\nimport { AdminCourseEditComponent } from './admin-course-edit/admin-course-edit.component';\nimport { AdminCourseNewComponent } from './admin-course-new/admin-course-new.component';\nimport { SuccessMessageComponent } from './success-message/success-message.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AdminComponent,\n    AdminTermsComponent,\n    AdminTermEditComponent,\n    AdminTermNewComponent,\n    HomeComponent,\n    ForbiddenComponent,\n    NotFoundComponent,\n    ErrorMessageComponent,\n    AdminCoursesComponent,\n    AdminCourseEditComponent,\n    AdminCourseNewComponent,\n    SuccessMessageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"ui error message\\\" *ngIf=\\\"error\\\">\\n  <i class=\\\"close icon\\\" (click)=\\\"error=undefined\\\"></i>\\n  <div class=\\\"header\\\"><i class=\\\"times circle icon\\\"></i> {{error.msg||'Unexpected Error'}}</div>\\n  <p *ngIf=\\\"error.msg\\\">{{error.detail}}</p>\\n  <p *ngIf=\\\"!error.msg\\\">{{error}}</p>\\n</div>\\n\"","module.exports = \":host {\\n  display: block;\\n  margin-top: 1em;\\n  margin-bottom: 1em;\\n}\\n:host:first-child {\\n  margin-top: 0;\\n}\\n:host:last-child {\\n  margin-bottom: 0;\\n}\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport {ErrorMessage} from \"../models\";\n\n@Component({\n  selector: 'app-error-message',\n  templateUrl: './error-message.component.html',\n  styleUrls: ['./error-message.component.less']\n})\nexport class ErrorMessageComponent implements OnInit {\n  @Input() error: ErrorMessage;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"ui middle aligned center aligned padded stackable grid\\\">\\n  <div class=\\\"column\\\">\\n    <div class=\\\"ui icon header\\\">\\n      <i class=\\\"ui dont icon\\\"></i>\\n      Permission Denied\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".grid {\\n  height: 100%;\\n}\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forbidden',\n  templateUrl: './forbidden.component.html',\n  styleUrls: ['./forbidden.component.less']\n})\nexport class ForbiddenComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<button class=\\\"ui violet button\\\" routerLink=\\\"admin\\\">Management</button>\\n<a href=\\\"http://localhost:8077/account/logout\\\" class=\\\"ui teal button\\\">Logout</a>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.less']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nexport class Logger {\n  debug: (message: any) => void;\n  info: (message: any) => void;\n  warn: (message: any) => void;\n  error: (message: any) => void\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogService {\n  private css_tag: string = 'background: white; padding: 0 3px 0 3px; font-weight: bold; color: black; border-left: 4px solid;';\n  private css_message: string = '';\n\n  constructor() {\n  }\n\n  get_logger(tag: string): Logger {\n    let logger = new Logger();\n    logger.debug = console.debug.bind(window.console, `%c${tag}%c %s`, this.css_tag + 'border-color: #767676;', this.css_message);\n    logger.info = console.info.bind(window.console, `%c${tag}%c %s`, this.css_tag + 'border-color: #2185d0;', this.css_message);\n    logger.warn = console.warn.bind(window.console, `%c${tag}%c %s`, this.css_tag + 'border-color: #fbbd08;', this.css_message);\n    logger.error = console.error.bind(window.console, `%c${tag}%c %s`, this.css_tag + 'border-color: #db2828;', this.css_message);\n    return logger\n  }\n}\n","export class SuccessMessage {\n  msg: string;\n  detail?: string;\n}\n\nexport class ErrorMessage {\n  msg: string;\n  detail?: string;\n}\n\nexport class User{\n  id: number;\n  name: string;\n  email: string;\n  nickname: string;\n  avatar: string;\n\n  groups: Group[];\n}\n\nexport class Group{\n  id: number;\n  name: string;\n  description: string;\n}\n\nexport class Course{\n  id: number;\n  code: string;\n  name: string;\n}\n\nexport class Term{\n  id: number;\n  course_id: number;\n  course?: Course;\n\n  year: number;\n  semester: string;\n}\n","module.exports = \"<div class=\\\"ui middle aligned center aligned padded stackable grid\\\">\\n  <div class=\\\"column\\\">\\n    <div class=\\\"ui icon header\\\">\\n      <i class=\\\"ui dont icon\\\"></i>\\n      Page Not Found\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".grid {\\n  height: 100%;\\n}\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.less']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"ui success message\\\" *ngIf=\\\"success\\\">\\n  <i class=\\\"close icon\\\" (click)=\\\"success=undefined\\\"></i>\\n  <div class=\\\"header\\\"><i class=\\\"check circle icon\\\"></i> {{success.msg||'Success'}}</div>\\n  <p *ngIf=\\\"success.msg\\\">{{success.detail}}</p>\\n  <p *ngIf=\\\"!success.msg\\\">{{success}}</p>\\n</div>\\n\"","module.exports = \":host {\\n  display: block;\\n  margin-top: 1em;\\n  margin-bottom: 1em;\\n}\\n:host:first-child {\\n  margin-top: 0;\\n}\\n:host:last-child {\\n  margin-bottom: 0;\\n}\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport {SuccessMessage} from \"../models\";\n\n@Component({\n  selector: 'app-success-message',\n  templateUrl: './success-message.component.html',\n  styleUrls: ['./success-message.component.less']\n})\nexport class SuccessMessageComponent implements OnInit {\n  @Input() success: SuccessMessage;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import {ErrorMessage} from \"./models\";\n\nexport class UploadFilter {\n  readonly accept: string[];\n  readonly accept_ext: string[];\n  readonly size_limit: number\n}\n\nexport class UploadFilters {\n  static avatar: UploadFilter = {\n    \"accept\": [\"image/png\", \"image/jpg\", \"image/jpeg\", \"image/gif\"],\n    \"accept_ext\": [\"png\", \"jpg\", \"jpeg\", \"gif\"],\n    \"size_limit\": 262144,\n\n  };\n\n  static icon: UploadFilter = {\n    \"accept\": [\"image/png\", \"image/jpg\", \"image/jpeg\", \"image/gif\"],\n    \"accept_ext\": [\"png\", \"jpg\", \"jpeg\", \"gif\"],\n    \"size_limit\": 262144\n  };\n}\n\nexport class UploadValidator {\n  error: ErrorMessage;\n\n  constructor(readonly filter: UploadFilter) {\n  }\n\n  check(file: File): boolean {\n    this.error = undefined;\n\n    if (!file) {\n      this.error = {msg:'no file', detail:undefined};\n      return false;\n    }\n\n    if(this.filter.accept_ext){\n      let accepted = false;\n      const ext = file.name.split('.').pop();\n      for(let accept_ext of this.filter.accept_ext){\n        if(accept_ext == ext){\n          accepted = true;\n          break\n        }\n      }\n      if(!accepted){\n        this.error = {msg: 'invalid file extension', detail: undefined};\n        return false;\n      }\n    }\n\n    if (file.size > this.filter.size_limit) {\n      this.error = {msg:'size too big', detail:`File '${file.name}' has ${Math.round(file.size/1024)} KB`};\n      return false;\n    }\n\n    return true\n  }\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}